#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// WiFi Configuration
const char* ssid = "NAMA_WIFI_ANDA";
const char* password = "KATA_LALUAN_WIFI";

// ThingsBoard Configuration
const char* mqtt_server = "demo.thingsboard.io";
const char* access_token = "TOKEN_AKSES_ANDA";

// Pin Configuration
#define LDR_PIN A0
#define LED_PIN D5  // GPIO14

// Threshold for Light Intensity
const int lightThreshold = 500;  // Ubah nilai ini untuk kepekaan cahaya

WiFiClient espClient;
PubSubClient client(espClient);

// Fungsi untuk menyambung ke WiFi
void setup_wifi() {
  Serial.println("Menyambung ke WiFi...");
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("\nWiFi Disambungkan!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());
}

// Fungsi untuk menghantar data ke ThingsBoard
void sendData(int lightValue) {
  String payload = "{";
  payload += "\"lightIntensity\":" + String(lightValue);
  payload += "}";

  Serial.print("Menghantar data: ");
  Serial.println(payload);

  client.publish("v1/devices/me/telemetry", payload.c_str());
}

void setup() {
  Serial.begin(115200);

  // Konfigurasi pin
  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, LOW);  // Pastikan LED dimatikan

  // Sambung ke WiFi
  setup_wifi();

  // Sambung ke ThingsBoard
  client.setServer(mqtt_server, 1883);
  while (!client.connected()) {
    Serial.println("Menyambung ke ThingsBoard...");
    if (client.connect("ESP8266_Client", access_token, NULL)) {
      Serial.println("Berjaya Disambungkan ke ThingsBoard!");
    } else {
      Serial.print("Gagal, Kod ralat: ");
      Serial.println(client.state());
      delay(5000);
    }
  }
}

void loop() {
  if (!client.connected()) {
    while (!client.connected()) {
      Serial.println("Menyambung semula ke ThingsBoard...");
      if (client.connect("ESP8266_Client", access_token, NULL)) {
        Serial.println("Berjaya Disambungkan!");
      } else {
        Serial.print("Gagal, Kod ralat: ");
        Serial.println(client.state());
        delay(5000);
      }
    }
  }

  client.loop();

  // Baca nilai dari LDR
  int lightValue = analogRead(LDR_PIN);
  Serial.print("Bacaan Cahaya: ");
  Serial.println(lightValue);

  // Kawal LED berdasarkan nilai cahaya
  if (lightValue < lightThreshold) {
    digitalWrite(LED_PIN, HIGH);  // Hidupkan LED jika gelap
    Serial.println("LED Hidup");
  } else {
    digitalWrite(LED_PIN, LOW);   // Matikan LED jika terang
    Serial.println("LED Mati");
  }

  // Hantar data ke ThingsBoard
  sendData(lightValue);

  delay(2000);  // Hantar data setiap 2 saat
}
